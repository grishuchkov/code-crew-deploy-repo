version: '3'

services:

  app:
    container_name: "java-app"
    build:
      context: ${SERVICE_1_SRC_DIR}
      dockerfile: Dockerfile
    depends_on:
      - postgres
    links:
      - postgres:postgres
    ports:
      - "8080:8080"
    environment:
      JWT_REFRESH_SECRET: edShUTQIjFA/3+Ai0lUGcv0RmnN7Kh5ufgDd3ypXebN+B2+cuUZ446w99nUt0XBmvWaEbTsGStESonwFAVa4DsO2+yvbR1qYymbQsBFGwDHP70WjYs/tALe4fmiQy/c7h/uvkfndFLot136QOPo0jzibcreOV/1BxuQTyMgGTRRc7wHzPwGfvxujnd0myTyz2pI+FoPI4xhaOl1ZbR/GuOdeSeMDBiCtAqbDsA==
      JWT_SIGNATURE_GENERATOR_SECRET: UaaOlcsrG2w7+rl/FN7O5GMEsviHy3bOIYq3V/PhtlYci1c4U5ITzmIos84/Ypq3Gqkcqm46q04/YMDXgCjCkDCtCqbB/EYGcCAadxWWt7nD2SLkmghiKQ99L6iP/HM4xyZqV3lD0PpN5Xq4SRBR/DwLRcbgRV17imK3pxvF8yeZMgovAg39qCsKXSGwIDWTd+imk8zPQ8cge70iCCWIa4o9PGrZTri6/PaveA==
      MICRONAUT_DB: ${POSTGRES_DB}
      MICRONAUT_USER: ${POSTGRES_USER}
      MICRONAUT_PASSWORD: ${POSTGRES_PASSWORD}

  postgres:
    container_name: "postgres"
    image: 'postgres'
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  nextjs-app:
    container_name: "frontend"
    build: # build if image not exist
      context: ${INTERFACE_SRC_DIR}
      dockerfile: Dockerfile
    environment:
      - ${NEXT_PUBLIC_BASE_API_URL}
      - ${AUTH_URL}
    ports:
      - "${NEXTJS_APP_PORT}:3000"

  proxy:
    container_name: nginx
    image: nginx:stable
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"